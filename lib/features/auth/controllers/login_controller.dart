import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:appta/firebase/auth_service.dart';

class LoginController {
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  final isPasswordVisible = ValueNotifier<bool>(false);

  final AuthService _authService = AuthService();

  // ·∫®n / hi·ªán m·∫≠t kh·∫©u
  void togglePasswordVisibility() {
    isPasswordVisible.value = !isPasswordVisible.value;
  }

  // ƒêƒÉng nh·∫≠p v·ªõi email & m·∫≠t kh·∫©u
  Future<void> login(BuildContext context) async {
    try {
      final user = await _authService.signInWithEmail(
        emailController.text.trim(),
        passwordController.text.trim(),
      );

      if (user != null) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng"),
            backgroundColor: Colors.green,
          ),
        );
        Navigator.pushReplacementNamed(context, '/home');
      }
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("T√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u c·ªßa b·∫°n kh√¥ng ƒë√∫ng"),
          backgroundColor: Colors.redAccent,
        ),
      );
    }
  }

  // ƒêƒÉng nh·∫≠p v·ªõi Google
  Future<void> loginWithGoogle(BuildContext context) async {
    try {
      final user = await _authService.signInWithGoogle();
      if (user != null) {
        ScaffoldMessenger.of(context).showSnackBar(
          const SnackBar(
            content: Text("‚úÖ ƒêƒÉng nh·∫≠p Google th√†nh c√¥ng"),
            backgroundColor: Colors.green,
          ),
        );
        Navigator.pushReplacementNamed(context, '/home');
      }
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p b·∫±ng Google. Vui l√≤ng th·ª≠ l·∫°i."),
          backgroundColor: Colors.redAccent,
        ),
      );
    }
  }

  // G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
  Future<void> sendPasswordResetEmail(BuildContext context) async {
    try {
      await FirebaseAuth.instance
          .sendPasswordResetEmail(email: emailController.text.trim());
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("üì© Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i."),
          backgroundColor: Colors.green,
        ),
      );
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          content: Text("Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n v·ªõi email n√†y."),
          backgroundColor: Colors.redAccent,
        ),
      );
    }
  }

  // Gi·∫£i ph√≥ng t√†i nguy√™n
  void dispose() {
    emailController.dispose();
    passwordController.dispose();
    isPasswordVisible.dispose();
  }
}
